// <auto-generated />
using Capstone.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capstone.Migrations
{
    [DbContext(typeof(NightCapDBContext))]
    [Migration("20200812011210_FavoriteForumModelChange2")]
    partial class FavoriteForumModelChange2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capstone.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired();

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<int>("ParentId")
                        .HasColumnName("ParentId");

                    b.Property<int>("PostId");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Capstone.Models.FavoriteForum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ForumId");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.ToTable("user_forum_favorite");
                });

            modelBuilder.Entity("Capstone.Models.Forum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Forum");
                });

            modelBuilder.Entity("Capstone.Models.Moderator", b =>
                {
                    b.Property<int>("RelationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ForumName")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("RelationID");

                    b.ToTable("user_forum_moderator");
                });

            modelBuilder.Entity("Capstone.Models.Post", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<int>("ForumId");

                    b.Property<string>("IMG_URL");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Capstone.Models.UpdatedComment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<int>("CommentId");

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("UpdatedComment");
                });

            modelBuilder.Entity("Capstone.Models.UpdatedPost", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<int>("PostId");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("UpdatedPost");
                });

            modelBuilder.Entity("Capstone.Models.Vote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentId");

                    b.Property<int>("PostId");

                    b.Property<int>("Userid");

                    b.Property<int>("VoteType");

                    b.HasKey("VoteId");

                    b.ToTable("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
